global
  log stdout format raw local0

  maxconn 0
  nbthread 4

  # daemon
  ca-base /etc/ssl
  crt-base /etc/ssl
  # TODO: Check if we can get reload to be faster by saving server state.
  # server-state-file /tmp/haproxy.state
  stats socket /tmp/haproxy.sock mode 600 level admin expose-fd listeners
  stats timeout 2m

  # Increase the default request size to be comparable to modern cloud load balancers (ALB: 64kb), affects
  # total memory use when large numbers of connections are open.
  # In OCP 4.8, this value is adjustable via the IngressController API.
  # Cluster administrators are still encouraged to use the default values provided below.
  tune.maxrewrite 8192
  tune.bufsize 32768

  # Configure the TLS versions we support
  ssl-default-bind-options ssl-min-ver TLSv1.2

# The default cipher suite can be selected from the three sets recommended by https://wiki.mozilla.org/Security/Server_Side_TLS,
# or the user can provide one using the ROUTER_CIPHERS environment variable.
# By default when a cipher set is not provided, intermediate is used.
  # user provided list of ciphers (Colon separated list as seen above)
  # the env default is not used here since we can't get here with empty ROUTER_CIPHERS
  tune.ssl.default-dh-param 2048
  ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384

  ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256

defaults
  maxconn 0

  # To configure custom default errors, you can either uncomment the
  # line below (server ... 127.0.0.1:8080) and point it to your custom
  # backend service or alternatively, you can send a custom 503 or 404 error.
  #
  # server openshift_backend 127.0.0.1:8080
  errorfile 503 /tmp/aim-haproxy-config/conf/error-page-503.http
  errorfile 404 /tmp/aim-haproxy-config/conf/error-page-404.http

  timeout connect 5s
  timeout client 30s
  timeout client-fin 1s
  timeout server 30s
  timeout server-fin 1s
  timeout http-request 10s
  timeout http-keep-alive 300s

  # Long timeout for WebSocket connections.
  timeout tunnel 1h



frontend public

  bind :8080
  mode http
  tcp-request inspect-delay 5s
  tcp-request content accept if HTTP
  monitor-uri /_______internal_router_healthz

  # Strip off Proxy headers to prevent HTTpoxy (https://httpoxy.org/)
  http-request del-header Proxy

  # DNS labels are case insensitive (RFC 4343), we need to convert the hostname into lowercase
  # before matching, or any requests containing uppercase characters will never match.
  http-request set-header Host %[req.hdr(Host),lower]

  # check if we need to redirect/force using https.
  acl secure_redirect base,map_reg_int(/tmp/aim-haproxy-config/conf/os_route_http_redirect.map) -m bool
  redirect scheme https if secure_redirect

  use_backend %[base,map_reg(/tmp/aim-haproxy-config/conf/os_http_be.map)]

  default_backend openshift_default

# public ssl accepts all connections and isn't checking certificates yet certificates to use will be
# determined by the next backend in the chain which may be an app backend (passthrough termination) or a backend
# that terminates encryption in this router (edge)
frontend public_ssl

  bind :8443
  tcp-request inspect-delay 5s
  tcp-request content accept if { req_ssl_hello_type 1 }

  # if the connection is SNI and the route is a passthrough don't use the termination backend, just use the tcp backend
  # for the SNI case, we also need to compare it in case-insensitive mode (by converting it to lowercase) as RFC 4343 says
  acl sni req.ssl_sni -m found
  acl sni_passthrough req.ssl_sni,lower,map_reg(/tmp/aim-haproxy-config/conf/os_sni_passthrough.map) -m found
  use_backend %[req.ssl_sni,lower,map_reg(/tmp/aim-haproxy-config/conf/os_tcp_be.map)] if sni sni_passthrough

  # if the route is SNI and NOT passthrough enter the termination flow
  use_backend be_sni if sni

  # non SNI requests should enter a default termination backend rather than the custom cert SNI backend since it
  # will not be able to match a cert to an SNI host
  default_backend be_no_sni

##########################################################################
# TLS SNI
#
# When using SNI we can terminate encryption with custom certificates.
# Certs will be stored in a directory and will be matched with the SNI host header
# which must exist in the CN of the certificate.  Certificates must be concatenated
# as a single file (handled by the plugin writer) per the haproxy documentation.
#
# Finally, check re-encryption settings and re-encrypt or just pass along the unencrypted
# traffic
##########################################################################
backend be_sni
  server fe_sni unix@/tmp/haproxy-sni.sock weight 1 send-proxy

frontend fe_sni
  # log global
  # option httplog
  # option dontlognull

  # terminate ssl on edge
  bind unix@/tmp/haproxy-sni.sock ssl crt /tmp/haproxy-default.pem crt-list /tmp/aim-haproxy-config/conf/cert_config.map accept-proxy
  mode http

  # Strip off Proxy headers to prevent HTTpoxy (https://httpoxy.org/)
  http-request del-header Proxy

  # DNS labels are case insensitive (RFC 4343), we need to convert the hostname into lowercase
  # before matching, or any requests containing uppercase characters will never match.
  http-request set-header Host %[req.hdr(Host),lower]



  # map to backend
  # Search from most specific to general path (host case).
  # Note: If no match, haproxy uses the default_backend, no other
  #       use_backend directives below this will be processed.
  use_backend %[base,map_reg(/tmp/aim-haproxy-config/conf/os_edge_reencrypt_be.map)]

  default_backend openshift_default

##########################################################################
# END TLS SNI
##########################################################################

##########################################################################
# TLS NO SNI
#
# When we don't have SNI the only thing we can try to do is terminate the encryption
# using our wild card certificate.  Once that is complete we can either re-encrypt
# the traffic or pass it on to the backends
##########################################################################
# backend for when sni does not exist, or ssl term needs to happen on the edge
backend be_no_sni
  server fe_no_sni unix@/tmp/haproxy-no-sni.sock weight 1 send-proxy

frontend fe_no_sni

  # terminate ssl on edge
  bind unix@/tmp/haproxy-no-sni.sock ssl crt /tmp/haproxy-default.pem accept-proxy
  mode http

  # Strip off Proxy headers to prevent HTTpoxy (https://httpoxy.org/)
  http-request del-header Proxy

  # DNS labels are case insensitive (RFC 4343), we need to convert the hostname into lowercase
  # before matching, or any requests containing uppercase characters will never match.
  http-request set-header Host %[req.hdr(Host),lower]



  # map to backend
  # Search from most specific to general path (host case).
  # Note: If no match, haproxy uses the default_backend, no other
  #       use_backend directives below this will be processed.
  use_backend %[base,map_reg(/tmp/aim-haproxy-config/conf/os_edge_reencrypt_be.map)]

  default_backend openshift_default

listen stats
  bind :1936
  log global
  option httplog
  mode http
  stats enable
  stats refresh 5s
  stats uri /stats

##########################################################################
# END TLS NO SNI
##########################################################################

backend openshift_default
  mode http
  option forwardfor
  #option http-keep-alive
  option http-pretend-keepalive

##-------------- app level backends ----------------"

backend be_secure:docker-nginx-1-reencrypt
  mode http
  option redispatch
  option forwardfor
  balance random

  timeout check 5000ms
  http-request add-header X-Forwarded-Host %[req.hdr(host)]
  http-request add-header X-Forwarded-Port %[dst_port]
  http-request add-header X-Forwarded-Proto http if !{ ssl_fc }
  http-request add-header X-Forwarded-Proto https if { ssl_fc }
  http-request add-header X-Forwarded-Proto-Version h2 if { ssl_fc_alpn -i h2 }
  http-request add-header Forwarded for=%[src];host=%[req.hdr(host)];proto=%[req.hdr(X-Forwarded-Proto)]
  cookie 0dab42a568a8eece29970f779351a08102ffb52e2beaf2513e2e488cfae9dc37 insert indirect nocache httponly secure attr SameSite=None
  server pod:docker-nginx-1:192.168.7.64:10000 192.168.7.64:10000 cookie 73cd9eafc884e2e3152faeb2e25bff20180a153977f07992ecee8a865a24bad0 weight 1 ssl verify required ca-file /tmp/aim-haproxy-config/router/cacerts/be_secure:docker-nginx-1-reencrypt.pem

backend be_edge_http:docker-nginx-1-edge
  mode http
  option redispatch
  option forwardfor
  balance random

  timeout check 5000ms
  http-request add-header X-Forwarded-Host %[req.hdr(host)]
  http-request add-header X-Forwarded-Port %[dst_port]
  http-request add-header X-Forwarded-Proto http if !{ ssl_fc }
  http-request add-header X-Forwarded-Proto https if { ssl_fc }
  http-request add-header X-Forwarded-Proto-Version h2 if { ssl_fc_alpn -i h2 }
  http-request add-header Forwarded for=%[src];host=%[req.hdr(host)];proto=%[req.hdr(X-Forwarded-Proto)]
  cookie 0dab42a568a8eece29970f779351a08102ffb52e2beaf2513e2e488cfae9dc37 insert indirect nocache httponly secure attr SameSite=None
  server pod:docker-nginx-1:192.168.7.64:12000 192.168.7.64:12000 cookie 73cd9eafc884e2e3152faeb2e25bff20180a153977f07992ecee8a865a24bad0 weight 1

backend be_http:docker-nginx-1-http
  mode http
  option redispatch
  option forwardfor
  balance random

  timeout check 5000ms
  http-request add-header X-Forwarded-Host %[req.hdr(host)]
  http-request add-header X-Forwarded-Port %[dst_port]
  http-request add-header X-Forwarded-Proto http if !{ ssl_fc }
  http-request add-header X-Forwarded-Proto https if { ssl_fc }
  http-request add-header X-Forwarded-Proto-Version h2 if { ssl_fc_alpn -i h2 }
  http-request add-header Forwarded for=%[src];host=%[req.hdr(host)];proto=%[req.hdr(X-Forwarded-Proto)]
  cookie 0dab42a568a8eece29970f779351a08102ffb52e2beaf2513e2e488cfae9dc37 insert indirect nocache httponly secure attr SameSite=None
  server pod:docker-nginx-1:192.168.7.64:12000 192.168.7.64:12000 cookie 73cd9eafc884e2e3152faeb2e25bff20180a153977f07992ecee8a865a24bad0 weight 1

backend be_tcp:docker-nginx-1-passthrough
  balance source

  hash-type consistent
  timeout check 5000ms
  server pod:docker-nginx-1:192.168.7.64:10000 192.168.7.64:10000 weight 1

backend be_secure:docker-nginx-2-reencrypt
  mode http
  option redispatch
  option forwardfor
  balance random

  timeout check 5000ms
  http-request add-header X-Forwarded-Host %[req.hdr(host)]
  http-request add-header X-Forwarded-Port %[dst_port]
  http-request add-header X-Forwarded-Proto http if !{ ssl_fc }
  http-request add-header X-Forwarded-Proto https if { ssl_fc }
  http-request add-header X-Forwarded-Proto-Version h2 if { ssl_fc_alpn -i h2 }
  http-request add-header Forwarded for=%[src];host=%[req.hdr(host)];proto=%[req.hdr(X-Forwarded-Proto)]
  cookie 018388afd544dfce1937f0c3fa87fad8140ed6c313d55ad167107a4b11b5f3c4 insert indirect nocache httponly secure attr SameSite=None
  server pod:docker-nginx-2:192.168.7.64:10009 192.168.7.64:10009 cookie 4c3f5b11b4a701761da55d313c6de0418daf78af3c0f7391ecfd445dfa883810 weight 1 ssl verify required ca-file /tmp/aim-haproxy-config/router/cacerts/be_secure:docker-nginx-2-reencrypt.pem

backend be_edge_http:docker-nginx-2-edge
  mode http
  option redispatch
  option forwardfor
  balance random

  timeout check 5000ms
  http-request add-header X-Forwarded-Host %[req.hdr(host)]
  http-request add-header X-Forwarded-Port %[dst_port]
  http-request add-header X-Forwarded-Proto http if !{ ssl_fc }
  http-request add-header X-Forwarded-Proto https if { ssl_fc }
  http-request add-header X-Forwarded-Proto-Version h2 if { ssl_fc_alpn -i h2 }
  http-request add-header Forwarded for=%[src];host=%[req.hdr(host)];proto=%[req.hdr(X-Forwarded-Proto)]
  cookie 018388afd544dfce1937f0c3fa87fad8140ed6c313d55ad167107a4b11b5f3c4 insert indirect nocache httponly secure attr SameSite=None
  server pod:docker-nginx-2:192.168.7.64:12009 192.168.7.64:12009 cookie 4c3f5b11b4a701761da55d313c6de0418daf78af3c0f7391ecfd445dfa883810 weight 1

backend be_http:docker-nginx-2-http
  mode http
  option redispatch
  option forwardfor
  balance random

  timeout check 5000ms
  http-request add-header X-Forwarded-Host %[req.hdr(host)]
  http-request add-header X-Forwarded-Port %[dst_port]
  http-request add-header X-Forwarded-Proto http if !{ ssl_fc }
  http-request add-header X-Forwarded-Proto https if { ssl_fc }
  http-request add-header X-Forwarded-Proto-Version h2 if { ssl_fc_alpn -i h2 }
  http-request add-header Forwarded for=%[src];host=%[req.hdr(host)];proto=%[req.hdr(X-Forwarded-Proto)]
  cookie 018388afd544dfce1937f0c3fa87fad8140ed6c313d55ad167107a4b11b5f3c4 insert indirect nocache httponly secure attr SameSite=None
  server pod:docker-nginx-2:192.168.7.64:12009 192.168.7.64:12009 cookie 4c3f5b11b4a701761da55d313c6de0418daf78af3c0f7391ecfd445dfa883810 weight 1

backend be_tcp:docker-nginx-2-passthrough
  balance source

  hash-type consistent
  timeout check 5000ms
  server pod:docker-nginx-2:192.168.7.64:10009 192.168.7.64:10009 weight 1

backend be_secure:docker-nginx-3-reencrypt
  mode http
  option redispatch
  option forwardfor
  balance random

  timeout check 5000ms
  http-request add-header X-Forwarded-Host %[req.hdr(host)]
  http-request add-header X-Forwarded-Port %[dst_port]
  http-request add-header X-Forwarded-Proto http if !{ ssl_fc }
  http-request add-header X-Forwarded-Proto https if { ssl_fc }
  http-request add-header X-Forwarded-Proto-Version h2 if { ssl_fc_alpn -i h2 }
  http-request add-header Forwarded for=%[src];host=%[req.hdr(host)];proto=%[req.hdr(X-Forwarded-Proto)]
  cookie af47200c897a3035b4447bd37fa0cd2aa90e06dd9d1d8174297bd80037f1e8ee insert indirect nocache httponly secure attr SameSite=None
  server pod:docker-nginx-3:192.168.7.64:10003 192.168.7.64:10003 cookie ee8e1f73008db7924718d1d9dd60e09aa2dc0af73db7444b5303a798c00274fa weight 1 ssl verify required ca-file /tmp/aim-haproxy-config/router/cacerts/be_secure:docker-nginx-3-reencrypt.pem

backend be_edge_http:docker-nginx-3-edge
  mode http
  option redispatch
  option forwardfor
  balance random

  timeout check 5000ms
  http-request add-header X-Forwarded-Host %[req.hdr(host)]
  http-request add-header X-Forwarded-Port %[dst_port]
  http-request add-header X-Forwarded-Proto http if !{ ssl_fc }
  http-request add-header X-Forwarded-Proto https if { ssl_fc }
  http-request add-header X-Forwarded-Proto-Version h2 if { ssl_fc_alpn -i h2 }
  http-request add-header Forwarded for=%[src];host=%[req.hdr(host)];proto=%[req.hdr(X-Forwarded-Proto)]
  cookie af47200c897a3035b4447bd37fa0cd2aa90e06dd9d1d8174297bd80037f1e8ee insert indirect nocache httponly secure attr SameSite=None
  server pod:docker-nginx-3:192.168.7.64:12003 192.168.7.64:12003 cookie ee8e1f73008db7924718d1d9dd60e09aa2dc0af73db7444b5303a798c00274fa weight 1

backend be_http:docker-nginx-3-http
  mode http
  option redispatch
  option forwardfor
  balance random

  timeout check 5000ms
  http-request add-header X-Forwarded-Host %[req.hdr(host)]
  http-request add-header X-Forwarded-Port %[dst_port]
  http-request add-header X-Forwarded-Proto http if !{ ssl_fc }
  http-request add-header X-Forwarded-Proto https if { ssl_fc }
  http-request add-header X-Forwarded-Proto-Version h2 if { ssl_fc_alpn -i h2 }
  http-request add-header Forwarded for=%[src];host=%[req.hdr(host)];proto=%[req.hdr(X-Forwarded-Proto)]
  cookie af47200c897a3035b4447bd37fa0cd2aa90e06dd9d1d8174297bd80037f1e8ee insert indirect nocache httponly secure attr SameSite=None
  server pod:docker-nginx-3:192.168.7.64:12003 192.168.7.64:12003 cookie ee8e1f73008db7924718d1d9dd60e09aa2dc0af73db7444b5303a798c00274fa weight 1

backend be_tcp:docker-nginx-3-passthrough
  balance source

  hash-type consistent
  timeout check 5000ms
  server pod:docker-nginx-3:192.168.7.64:10003 192.168.7.64:10003 weight 1

backend be_secure:docker-nginx-4-reencrypt
  mode http
  option redispatch
  option forwardfor
  balance random

  timeout check 5000ms
  http-request add-header X-Forwarded-Host %[req.hdr(host)]
  http-request add-header X-Forwarded-Port %[dst_port]
  http-request add-header X-Forwarded-Proto http if !{ ssl_fc }
  http-request add-header X-Forwarded-Proto https if { ssl_fc }
  http-request add-header X-Forwarded-Proto-Version h2 if { ssl_fc_alpn -i h2 }
  http-request add-header Forwarded for=%[src];host=%[req.hdr(host)];proto=%[req.hdr(X-Forwarded-Proto)]
  cookie d7f84fcab43d666a261ea0d6e7224112eeb834c6d8d0f357b61a7f8de78227d0 insert indirect nocache httponly secure attr SameSite=None
  server pod:docker-nginx-4:192.168.7.64:10007 192.168.7.64:10007 cookie 0d72287ed8f7a16b753f0d8d6c438bee2114227e6d0ae162a666d34bacf48f7d weight 1 ssl verify required ca-file /tmp/aim-haproxy-config/router/cacerts/be_secure:docker-nginx-4-reencrypt.pem

backend be_edge_http:docker-nginx-4-edge
  mode http
  option redispatch
  option forwardfor
  balance random

  timeout check 5000ms
  http-request add-header X-Forwarded-Host %[req.hdr(host)]
  http-request add-header X-Forwarded-Port %[dst_port]
  http-request add-header X-Forwarded-Proto http if !{ ssl_fc }
  http-request add-header X-Forwarded-Proto https if { ssl_fc }
  http-request add-header X-Forwarded-Proto-Version h2 if { ssl_fc_alpn -i h2 }
  http-request add-header Forwarded for=%[src];host=%[req.hdr(host)];proto=%[req.hdr(X-Forwarded-Proto)]
  cookie d7f84fcab43d666a261ea0d6e7224112eeb834c6d8d0f357b61a7f8de78227d0 insert indirect nocache httponly secure attr SameSite=None
  server pod:docker-nginx-4:192.168.7.64:12007 192.168.7.64:12007 cookie 0d72287ed8f7a16b753f0d8d6c438bee2114227e6d0ae162a666d34bacf48f7d weight 1

backend be_http:docker-nginx-4-http
  mode http
  option redispatch
  option forwardfor
  balance random

  timeout check 5000ms
  http-request add-header X-Forwarded-Host %[req.hdr(host)]
  http-request add-header X-Forwarded-Port %[dst_port]
  http-request add-header X-Forwarded-Proto http if !{ ssl_fc }
  http-request add-header X-Forwarded-Proto https if { ssl_fc }
  http-request add-header X-Forwarded-Proto-Version h2 if { ssl_fc_alpn -i h2 }
  http-request add-header Forwarded for=%[src];host=%[req.hdr(host)];proto=%[req.hdr(X-Forwarded-Proto)]
  cookie d7f84fcab43d666a261ea0d6e7224112eeb834c6d8d0f357b61a7f8de78227d0 insert indirect nocache httponly secure attr SameSite=None
  server pod:docker-nginx-4:192.168.7.64:12007 192.168.7.64:12007 cookie 0d72287ed8f7a16b753f0d8d6c438bee2114227e6d0ae162a666d34bacf48f7d weight 1

backend be_tcp:docker-nginx-4-passthrough
  balance source

  hash-type consistent
  timeout check 5000ms
  server pod:docker-nginx-4:192.168.7.64:10007 192.168.7.64:10007 weight 1

backend be_secure:docker-nginx-5-reencrypt
  mode http
  option redispatch
  option forwardfor
  balance random

  timeout check 5000ms
  http-request add-header X-Forwarded-Host %[req.hdr(host)]
  http-request add-header X-Forwarded-Port %[dst_port]
  http-request add-header X-Forwarded-Proto http if !{ ssl_fc }
  http-request add-header X-Forwarded-Proto https if { ssl_fc }
  http-request add-header X-Forwarded-Proto-Version h2 if { ssl_fc_alpn -i h2 }
  http-request add-header Forwarded for=%[src];host=%[req.hdr(host)];proto=%[req.hdr(X-Forwarded-Proto)]
  cookie 677940104d008eb7e080a5bfa13359afbd6e901be56ee229dff70f605be2d004 insert indirect nocache httponly secure attr SameSite=None
  server pod:docker-nginx-5:192.168.7.64:10005 192.168.7.64:10005 cookie 400d2eb506f07ffd922ee65eb109e6dbfa95331afb5a080e7be800d401049776 weight 1 ssl verify required ca-file /tmp/aim-haproxy-config/router/cacerts/be_secure:docker-nginx-5-reencrypt.pem

backend be_edge_http:docker-nginx-5-edge
  mode http
  option redispatch
  option forwardfor
  balance random

  timeout check 5000ms
  http-request add-header X-Forwarded-Host %[req.hdr(host)]
  http-request add-header X-Forwarded-Port %[dst_port]
  http-request add-header X-Forwarded-Proto http if !{ ssl_fc }
  http-request add-header X-Forwarded-Proto https if { ssl_fc }
  http-request add-header X-Forwarded-Proto-Version h2 if { ssl_fc_alpn -i h2 }
  http-request add-header Forwarded for=%[src];host=%[req.hdr(host)];proto=%[req.hdr(X-Forwarded-Proto)]
  cookie 677940104d008eb7e080a5bfa13359afbd6e901be56ee229dff70f605be2d004 insert indirect nocache httponly secure attr SameSite=None
  server pod:docker-nginx-5:192.168.7.64:12005 192.168.7.64:12005 cookie 400d2eb506f07ffd922ee65eb109e6dbfa95331afb5a080e7be800d401049776 weight 1

backend be_http:docker-nginx-5-http
  mode http
  option redispatch
  option forwardfor
  balance random

  timeout check 5000ms
  http-request add-header X-Forwarded-Host %[req.hdr(host)]
  http-request add-header X-Forwarded-Port %[dst_port]
  http-request add-header X-Forwarded-Proto http if !{ ssl_fc }
  http-request add-header X-Forwarded-Proto https if { ssl_fc }
  http-request add-header X-Forwarded-Proto-Version h2 if { ssl_fc_alpn -i h2 }
  http-request add-header Forwarded for=%[src];host=%[req.hdr(host)];proto=%[req.hdr(X-Forwarded-Proto)]
  cookie 677940104d008eb7e080a5bfa13359afbd6e901be56ee229dff70f605be2d004 insert indirect nocache httponly secure attr SameSite=None
  server pod:docker-nginx-5:192.168.7.64:12005 192.168.7.64:12005 cookie 400d2eb506f07ffd922ee65eb109e6dbfa95331afb5a080e7be800d401049776 weight 1

backend be_tcp:docker-nginx-5-passthrough
  balance source

  hash-type consistent
  timeout check 5000ms
  server pod:docker-nginx-5:192.168.7.64:10005 192.168.7.64:10005 weight 1

backend be_secure:docker-nginx-6-reencrypt
  mode http
  option redispatch
  option forwardfor
  balance random

  timeout check 5000ms
  http-request add-header X-Forwarded-Host %[req.hdr(host)]
  http-request add-header X-Forwarded-Port %[dst_port]
  http-request add-header X-Forwarded-Proto http if !{ ssl_fc }
  http-request add-header X-Forwarded-Proto https if { ssl_fc }
  http-request add-header X-Forwarded-Proto-Version h2 if { ssl_fc_alpn -i h2 }
  http-request add-header Forwarded for=%[src];host=%[req.hdr(host)];proto=%[req.hdr(X-Forwarded-Proto)]
  cookie 8b3c67f64a019213c235cdb730b6ea2541324015a14774013401335a0e65fb92 insert indirect nocache httponly secure attr SameSite=None
  server pod:docker-nginx-6:192.168.7.64:10001 192.168.7.64:10001 cookie 29bf56e0a53310431047741a5104231452ae6b037bdc532c312910a46f76c3b8 weight 1 ssl verify required ca-file /tmp/aim-haproxy-config/router/cacerts/be_secure:docker-nginx-6-reencrypt.pem

backend be_edge_http:docker-nginx-6-edge
  mode http
  option redispatch
  option forwardfor
  balance random

  timeout check 5000ms
  http-request add-header X-Forwarded-Host %[req.hdr(host)]
  http-request add-header X-Forwarded-Port %[dst_port]
  http-request add-header X-Forwarded-Proto http if !{ ssl_fc }
  http-request add-header X-Forwarded-Proto https if { ssl_fc }
  http-request add-header X-Forwarded-Proto-Version h2 if { ssl_fc_alpn -i h2 }
  http-request add-header Forwarded for=%[src];host=%[req.hdr(host)];proto=%[req.hdr(X-Forwarded-Proto)]
  cookie 8b3c67f64a019213c235cdb730b6ea2541324015a14774013401335a0e65fb92 insert indirect nocache httponly secure attr SameSite=None
  server pod:docker-nginx-6:192.168.7.64:12001 192.168.7.64:12001 cookie 29bf56e0a53310431047741a5104231452ae6b037bdc532c312910a46f76c3b8 weight 1

backend be_http:docker-nginx-6-http
  mode http
  option redispatch
  option forwardfor
  balance random

  timeout check 5000ms
  http-request add-header X-Forwarded-Host %[req.hdr(host)]
  http-request add-header X-Forwarded-Port %[dst_port]
  http-request add-header X-Forwarded-Proto http if !{ ssl_fc }
  http-request add-header X-Forwarded-Proto https if { ssl_fc }
  http-request add-header X-Forwarded-Proto-Version h2 if { ssl_fc_alpn -i h2 }
  http-request add-header Forwarded for=%[src];host=%[req.hdr(host)];proto=%[req.hdr(X-Forwarded-Proto)]
  cookie 8b3c67f64a019213c235cdb730b6ea2541324015a14774013401335a0e65fb92 insert indirect nocache httponly secure attr SameSite=None
  server pod:docker-nginx-6:192.168.7.64:12001 192.168.7.64:12001 cookie 29bf56e0a53310431047741a5104231452ae6b037bdc532c312910a46f76c3b8 weight 1

backend be_tcp:docker-nginx-6-passthrough
  balance source

  hash-type consistent
  timeout check 5000ms
  server pod:docker-nginx-6:192.168.7.64:10001 192.168.7.64:10001 weight 1

backend be_secure:docker-nginx-7-reencrypt
  mode http
  option redispatch
  option forwardfor
  balance random

  timeout check 5000ms
  http-request add-header X-Forwarded-Host %[req.hdr(host)]
  http-request add-header X-Forwarded-Port %[dst_port]
  http-request add-header X-Forwarded-Proto http if !{ ssl_fc }
  http-request add-header X-Forwarded-Proto https if { ssl_fc }
  http-request add-header X-Forwarded-Proto-Version h2 if { ssl_fc_alpn -i h2 }
  http-request add-header Forwarded for=%[src];host=%[req.hdr(host)];proto=%[req.hdr(X-Forwarded-Proto)]
  cookie 2f2ee9275735576cebefe04e74683f3b32290c226406063dacd04f0b9ffb058f insert indirect nocache httponly secure attr SameSite=None
  server pod:docker-nginx-7:192.168.7.64:10002 192.168.7.64:10002 cookie f850bff9b0f40dcad360604622c09223b3f38647e40efebec6755375729ee2f2 weight 1 ssl verify required ca-file /tmp/aim-haproxy-config/router/cacerts/be_secure:docker-nginx-7-reencrypt.pem

backend be_edge_http:docker-nginx-7-edge
  mode http
  option redispatch
  option forwardfor
  balance random

  timeout check 5000ms
  http-request add-header X-Forwarded-Host %[req.hdr(host)]
  http-request add-header X-Forwarded-Port %[dst_port]
  http-request add-header X-Forwarded-Proto http if !{ ssl_fc }
  http-request add-header X-Forwarded-Proto https if { ssl_fc }
  http-request add-header X-Forwarded-Proto-Version h2 if { ssl_fc_alpn -i h2 }
  http-request add-header Forwarded for=%[src];host=%[req.hdr(host)];proto=%[req.hdr(X-Forwarded-Proto)]
  cookie 2f2ee9275735576cebefe04e74683f3b32290c226406063dacd04f0b9ffb058f insert indirect nocache httponly secure attr SameSite=None
  server pod:docker-nginx-7:192.168.7.64:12002 192.168.7.64:12002 cookie f850bff9b0f40dcad360604622c09223b3f38647e40efebec6755375729ee2f2 weight 1

backend be_http:docker-nginx-7-http
  mode http
  option redispatch
  option forwardfor
  balance random

  timeout check 5000ms
  http-request add-header X-Forwarded-Host %[req.hdr(host)]
  http-request add-header X-Forwarded-Port %[dst_port]
  http-request add-header X-Forwarded-Proto http if !{ ssl_fc }
  http-request add-header X-Forwarded-Proto https if { ssl_fc }
  http-request add-header X-Forwarded-Proto-Version h2 if { ssl_fc_alpn -i h2 }
  http-request add-header Forwarded for=%[src];host=%[req.hdr(host)];proto=%[req.hdr(X-Forwarded-Proto)]
  cookie 2f2ee9275735576cebefe04e74683f3b32290c226406063dacd04f0b9ffb058f insert indirect nocache httponly secure attr SameSite=None
  server pod:docker-nginx-7:192.168.7.64:12002 192.168.7.64:12002 cookie f850bff9b0f40dcad360604622c09223b3f38647e40efebec6755375729ee2f2 weight 1

backend be_tcp:docker-nginx-7-passthrough
  balance source

  hash-type consistent
  timeout check 5000ms
  server pod:docker-nginx-7:192.168.7.64:10002 192.168.7.64:10002 weight 1

backend be_secure:docker-nginx-8-reencrypt
  mode http
  option redispatch
  option forwardfor
  balance random

  timeout check 5000ms
  http-request add-header X-Forwarded-Host %[req.hdr(host)]
  http-request add-header X-Forwarded-Port %[dst_port]
  http-request add-header X-Forwarded-Proto http if !{ ssl_fc }
  http-request add-header X-Forwarded-Proto https if { ssl_fc }
  http-request add-header X-Forwarded-Proto-Version h2 if { ssl_fc_alpn -i h2 }
  http-request add-header Forwarded for=%[src];host=%[req.hdr(host)];proto=%[req.hdr(X-Forwarded-Proto)]
  cookie 577fa7702a2015db80179b9c1803191f09fc840887a227959232cfd5d656a5cf insert indirect nocache httponly secure attr SameSite=None
  server pod:docker-nginx-8:192.168.7.64:10004 192.168.7.64:10004 cookie fc5a656d5dfc232959722a788048cf90f1913081c9b97108bd5102a2077af775 weight 1 ssl verify required ca-file /tmp/aim-haproxy-config/router/cacerts/be_secure:docker-nginx-8-reencrypt.pem

backend be_edge_http:docker-nginx-8-edge
  mode http
  option redispatch
  option forwardfor
  balance random

  timeout check 5000ms
  http-request add-header X-Forwarded-Host %[req.hdr(host)]
  http-request add-header X-Forwarded-Port %[dst_port]
  http-request add-header X-Forwarded-Proto http if !{ ssl_fc }
  http-request add-header X-Forwarded-Proto https if { ssl_fc }
  http-request add-header X-Forwarded-Proto-Version h2 if { ssl_fc_alpn -i h2 }
  http-request add-header Forwarded for=%[src];host=%[req.hdr(host)];proto=%[req.hdr(X-Forwarded-Proto)]
  cookie 577fa7702a2015db80179b9c1803191f09fc840887a227959232cfd5d656a5cf insert indirect nocache httponly secure attr SameSite=None
  server pod:docker-nginx-8:192.168.7.64:12004 192.168.7.64:12004 cookie fc5a656d5dfc232959722a788048cf90f1913081c9b97108bd5102a2077af775 weight 1

backend be_http:docker-nginx-8-http
  mode http
  option redispatch
  option forwardfor
  balance random

  timeout check 5000ms
  http-request add-header X-Forwarded-Host %[req.hdr(host)]
  http-request add-header X-Forwarded-Port %[dst_port]
  http-request add-header X-Forwarded-Proto http if !{ ssl_fc }
  http-request add-header X-Forwarded-Proto https if { ssl_fc }
  http-request add-header X-Forwarded-Proto-Version h2 if { ssl_fc_alpn -i h2 }
  http-request add-header Forwarded for=%[src];host=%[req.hdr(host)];proto=%[req.hdr(X-Forwarded-Proto)]
  cookie 577fa7702a2015db80179b9c1803191f09fc840887a227959232cfd5d656a5cf insert indirect nocache httponly secure attr SameSite=None
  server pod:docker-nginx-8:192.168.7.64:12004 192.168.7.64:12004 cookie fc5a656d5dfc232959722a788048cf90f1913081c9b97108bd5102a2077af775 weight 1

backend be_tcp:docker-nginx-8-passthrough
  balance source

  hash-type consistent
  timeout check 5000ms
  server pod:docker-nginx-8:192.168.7.64:10004 192.168.7.64:10004 weight 1

backend be_secure:docker-nginx-9-reencrypt
  mode http
  option redispatch
  option forwardfor
  balance random

  timeout check 5000ms
  http-request add-header X-Forwarded-Host %[req.hdr(host)]
  http-request add-header X-Forwarded-Port %[dst_port]
  http-request add-header X-Forwarded-Proto http if !{ ssl_fc }
  http-request add-header X-Forwarded-Proto https if { ssl_fc }
  http-request add-header X-Forwarded-Proto-Version h2 if { ssl_fc_alpn -i h2 }
  http-request add-header Forwarded for=%[src];host=%[req.hdr(host)];proto=%[req.hdr(X-Forwarded-Proto)]
  cookie 268eed370b054b51a221b29f2f3186087a4e518c48343fc03eae34dadca0ba93 insert indirect nocache httponly secure attr SameSite=None
  server pod:docker-nginx-9:192.168.7.64:10006 192.168.7.64:10006 cookie 39ab0acdad43eae30cf34384c815e4a7806813f2f92b122a15b450b073dee862 weight 1 ssl verify required ca-file /tmp/aim-haproxy-config/router/cacerts/be_secure:docker-nginx-9-reencrypt.pem

backend be_edge_http:docker-nginx-9-edge
  mode http
  option redispatch
  option forwardfor
  balance random

  timeout check 5000ms
  http-request add-header X-Forwarded-Host %[req.hdr(host)]
  http-request add-header X-Forwarded-Port %[dst_port]
  http-request add-header X-Forwarded-Proto http if !{ ssl_fc }
  http-request add-header X-Forwarded-Proto https if { ssl_fc }
  http-request add-header X-Forwarded-Proto-Version h2 if { ssl_fc_alpn -i h2 }
  http-request add-header Forwarded for=%[src];host=%[req.hdr(host)];proto=%[req.hdr(X-Forwarded-Proto)]
  cookie 268eed370b054b51a221b29f2f3186087a4e518c48343fc03eae34dadca0ba93 insert indirect nocache httponly secure attr SameSite=None
  server pod:docker-nginx-9:192.168.7.64:12006 192.168.7.64:12006 cookie 39ab0acdad43eae30cf34384c815e4a7806813f2f92b122a15b450b073dee862 weight 1

backend be_http:docker-nginx-9-http
  mode http
  option redispatch
  option forwardfor
  balance random

  timeout check 5000ms
  http-request add-header X-Forwarded-Host %[req.hdr(host)]
  http-request add-header X-Forwarded-Port %[dst_port]
  http-request add-header X-Forwarded-Proto http if !{ ssl_fc }
  http-request add-header X-Forwarded-Proto https if { ssl_fc }
  http-request add-header X-Forwarded-Proto-Version h2 if { ssl_fc_alpn -i h2 }
  http-request add-header Forwarded for=%[src];host=%[req.hdr(host)];proto=%[req.hdr(X-Forwarded-Proto)]
  cookie 268eed370b054b51a221b29f2f3186087a4e518c48343fc03eae34dadca0ba93 insert indirect nocache httponly secure attr SameSite=None
  server pod:docker-nginx-9:192.168.7.64:12006 192.168.7.64:12006 cookie 39ab0acdad43eae30cf34384c815e4a7806813f2f92b122a15b450b073dee862 weight 1

backend be_tcp:docker-nginx-9-passthrough
  balance source

  hash-type consistent
  timeout check 5000ms
  server pod:docker-nginx-9:192.168.7.64:10006 192.168.7.64:10006 weight 1

backend be_secure:docker-nginx-10-reencrypt
  mode http
  option redispatch
  option forwardfor
  balance random

  timeout check 5000ms
  http-request add-header X-Forwarded-Host %[req.hdr(host)]
  http-request add-header X-Forwarded-Port %[dst_port]
  http-request add-header X-Forwarded-Proto http if !{ ssl_fc }
  http-request add-header X-Forwarded-Proto https if { ssl_fc }
  http-request add-header X-Forwarded-Proto-Version h2 if { ssl_fc_alpn -i h2 }
  http-request add-header Forwarded for=%[src];host=%[req.hdr(host)];proto=%[req.hdr(X-Forwarded-Proto)]
  cookie 4dfa59e11fbb164899f2591634711fd1112f6dd2719d8da62f3e9dfd98457794 insert indirect nocache httponly secure attr SameSite=None
  server pod:docker-nginx-10:192.168.7.64:10008 192.168.7.64:10008 cookie 49775489dfd9e3f26ad8d9172dd6f2111df1174361952f998461bbf11e95afd4 weight 1 ssl verify required ca-file /tmp/aim-haproxy-config/router/cacerts/be_secure:docker-nginx-10-reencrypt.pem

backend be_edge_http:docker-nginx-10-edge
  mode http
  option redispatch
  option forwardfor
  balance random

  timeout check 5000ms
  http-request add-header X-Forwarded-Host %[req.hdr(host)]
  http-request add-header X-Forwarded-Port %[dst_port]
  http-request add-header X-Forwarded-Proto http if !{ ssl_fc }
  http-request add-header X-Forwarded-Proto https if { ssl_fc }
  http-request add-header X-Forwarded-Proto-Version h2 if { ssl_fc_alpn -i h2 }
  http-request add-header Forwarded for=%[src];host=%[req.hdr(host)];proto=%[req.hdr(X-Forwarded-Proto)]
  cookie 4dfa59e11fbb164899f2591634711fd1112f6dd2719d8da62f3e9dfd98457794 insert indirect nocache httponly secure attr SameSite=None
  server pod:docker-nginx-10:192.168.7.64:12008 192.168.7.64:12008 cookie 49775489dfd9e3f26ad8d9172dd6f2111df1174361952f998461bbf11e95afd4 weight 1

backend be_http:docker-nginx-10-http
  mode http
  option redispatch
  option forwardfor
  balance random

  timeout check 5000ms
  http-request add-header X-Forwarded-Host %[req.hdr(host)]
  http-request add-header X-Forwarded-Port %[dst_port]
  http-request add-header X-Forwarded-Proto http if !{ ssl_fc }
  http-request add-header X-Forwarded-Proto https if { ssl_fc }
  http-request add-header X-Forwarded-Proto-Version h2 if { ssl_fc_alpn -i h2 }
  http-request add-header Forwarded for=%[src];host=%[req.hdr(host)];proto=%[req.hdr(X-Forwarded-Proto)]
  cookie 4dfa59e11fbb164899f2591634711fd1112f6dd2719d8da62f3e9dfd98457794 insert indirect nocache httponly secure attr SameSite=None
  server pod:docker-nginx-10:192.168.7.64:12008 192.168.7.64:12008 cookie 49775489dfd9e3f26ad8d9172dd6f2111df1174361952f998461bbf11e95afd4 weight 1

backend be_tcp:docker-nginx-10-passthrough
  balance source

  hash-type consistent
  timeout check 5000ms
  server pod:docker-nginx-10:192.168.7.64:10008 192.168.7.64:10008 weight 1
